// <auto-generated />
using System;
using EncontreiPraVoce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEncontreiPraVoce.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250625174116_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("EncontreiPraVoce.Models.AcheiNaRuaPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEncontrado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPostagem")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalEncontrado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AcheiNaRuaPosts");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemItemUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.OpcaoResposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EhCorreta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerguntaConfirmacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaConfirmacaoId");

                    b.ToTable("OpcoesResposta");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.PerdiNaRuaPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPostagem")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalPerdido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PerdiNaRuaPosts");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.PerguntaConfirmacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcheiNaRuaPostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AcheiNaRuaPostId");

                    b.ToTable("PerguntasConfirmacao");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneContato")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.AcheiNaRuaPost", b =>
                {
                    b.HasOne("EncontreiPraVoce.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EncontreiPraVoce.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.OpcaoResposta", b =>
                {
                    b.HasOne("EncontreiPraVoce.Models.PerguntaConfirmacao", "perguntaConfirmacao")
                        .WithMany("Opcoes")
                        .HasForeignKey("PerguntaConfirmacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("perguntaConfirmacao");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.PerdiNaRuaPost", b =>
                {
                    b.HasOne("EncontreiPraVoce.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.PerguntaConfirmacao", b =>
                {
                    b.HasOne("EncontreiPraVoce.Models.AcheiNaRuaPost", "AcheiNaRuaPost")
                        .WithMany("PerguntaConfirmacao")
                        .HasForeignKey("AcheiNaRuaPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcheiNaRuaPost");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.AcheiNaRuaPost", b =>
                {
                    b.Navigation("PerguntaConfirmacao");
                });

            modelBuilder.Entity("EncontreiPraVoce.Models.PerguntaConfirmacao", b =>
                {
                    b.Navigation("Opcoes");
                });
#pragma warning restore 612, 618
        }
    }
}
